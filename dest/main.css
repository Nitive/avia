.flight-number-text {
  color: #0d60c0;
}
.flight-status--red {
  color: #d21d54;
  font-weight: bolder;
}
.flight-status--green {
  color: #36d11f;
  font-weight: bolder;
  text-shadow: 0 1px 1px #fff;
}
.aviaboard {
  color: #676566;
  text-shadow: 0 1px 1px #daccaf;
  border-spacing: 0;
}
.aviaboard td:nth-child(1),
.aviaboard th:nth-child(1) {
  width: 100px;
  min-width: 100px;
}
@media (max-width: 800px) {
  .aviaboard td:nth-child(1) {
    word-break: break-all;
  }
}
.aviaboard td:nth-child(2),
.aviaboard th:nth-child(2) {
  width: 190px;
  min-width: 190px;
}
@media (max-width: 800px) {
  .aviaboard td:nth-child(2) {
    word-break: break-all;
  }
}
.aviaboard td:nth-child(3),
.aviaboard th:nth-child(3) {
  width: 80px;
  min-width: 80px;
}
@media (max-width: 800px) {
  .aviaboard td:nth-child(3) {
    word-break: break-all;
  }
}
.aviaboard td:nth-child(4),
.aviaboard th:nth-child(4) {
  width: 80px;
  min-width: 80px;
}
@media (max-width: 800px) {
  .aviaboard td:nth-child(4) {
    word-break: break-all;
  }
}
.aviaboard td:nth-child(5),
.aviaboard th:nth-child(5) {
  width: 140px;
  min-width: 140px;
}
@media (max-width: 800px) {
  .aviaboard td:nth-child(5) {
    word-break: break-all;
  }
}
.aviaboard td:nth-child(6),
.aviaboard th:nth-child(6) {
  width: 110px;
  min-width: 110px;
}
@media (max-width: 800px) {
  .aviaboard td:nth-child(6) {
    word-break: break-all;
  }
}
.aviaboard td:nth-child(7),
.aviaboard th:nth-child(7) {
  width: 140px;
  min-width: 140px;
}
@media (max-width: 800px) {
  .aviaboard td:nth-child(7) {
    word-break: break-all;
  }
}
@media (max-width: 900px) {
  .aviaboard td:nth-child(7),
  .aviaboard th:nth-child(7) {
    width: 50px;
    min-width: 50px;
  }
}
@media (max-width: 800px) {
  .aviaboard td:nth-child(1),
  .aviaboard th:nth-child(1) {
    width: 80px;
    min-width: 80px;
  }
  .aviaboard td:nth-child(6),
  .aviaboard th:nth-child(6) {
    width: 60px;
    min-width: 60px;
  }
}
@media (max-width: 700px) {
  .aviaboard td:nth-child(2),
  .aviaboard th:nth-child(2) {
    width: 100px;
    min-width: 100px;
  }
  .aviaboard td:nth-child(5),
  .aviaboard th:nth-child(5) {
    width: 120px;
    min-width: 120px;
  }
}
.aviaboard td {
  padding: 0;
}
.aviaboard td,
.aviaboard th {
  -webkit-transition: width 0.3s;
  transition: width 0.3s;
  box-sizing: border-box;
}
.aviaboard__wrap {
  padding-top: 90px;
  position: relative;
  display: inline-block;
  overflow: hidden;
  border-radius: 5px;
  border: 2px solid #daccaf;
  box-shadow: 0 0 30px 0 rgba(107,94,76,0.3);
}
.aviaboard__wrap-size {
  min-height: 50px;
  max-height: calc(100vh - 190px);
  overflow-y: auto;
}
.aviaboard__control {
  position: absolute;
  top: 0;
}
.aviaboard__control-button {
  cursor: pointer;
  width: 150px !important;
  min-width: 150px !important;
}
.aviaboard__control-button > div {
  background-image: -webkit-linear-gradient(bottom, #eee3cb, #f2eed5);
  background-image: linear-gradient(to top, #eee3cb, #f2eed5);
  height: 40px;
  line-height: 40px;
  width: 150px;
  border-right: 2px solid #daccaf;
}
.aviaboard__control-button > div:hover {
  background-image: -webkit-linear-gradient(bottom, #e4d9c4, #e2dfc9);
  background-image: linear-gradient(to top, #e4d9c4, #e2dfc9);
}
.aviaboard__control-button > div:active {
  background-image: -webkit-linear-gradient(bottom, #ded6c4, #d9d6c3);
  background-image: linear-gradient(to top, #ded6c4, #d9d6c3);
}
.aviaboard__search {
  width: 100% !important;
}
.aviaboard__search input {
  width: calc(100% - 20px);
  height: 40px;
  padding: 0 0 0 20px;
  border: 0;
  outline: none;
  background: #fbfaf2;
}
.aviaboard__search-icon {
  cursor: pointer;
  background: #fbfaf2 url("images/search.svg") no-repeat center;
  width: 50px !important;
  min-width: 50px !important;
}
.aviaboard__head {
  position: absolute;
  top: 40px;
}
.aviaboard__head tr {
  height: 50px;
}
.aviaboard th {
  font-weight: bolder;
  padding: 0 5px;
  background-image: -webkit-linear-gradient(bottom, #eee3cb, #f2eed5);
  background-image: linear-gradient(to top, #eee3cb, #f2eed5);
  border: 2px solid #daccaf;
}
.aviaboard th:first-child {
  border-left: 0;
}
.aviaboard th:last-child {
  border-right: 0;
}
@media (max-width: 900px) {
  .aviaboard th span:first-child {
    display: none;
  }
}
@media (min-width: 900px) {
  .aviaboard th span:last-child {
    display: none;
  }
}
.aviaboard__row td {
  padding: 5px 10px;
  border-right: solid 1px #daccaf;
  border-bottom: solid 1px #daccaf;
}
.aviaboard__row td:last-child {
  border-right: 0;
}
.aviaboard__tbody {
  -webkit-transition: background 0.3s;
  transition: background 0.3s;
  cursor: pointer;
  background: rgba(242,238,213,0.3);
}
.aviaboard__tbody:nth-child(even) {
  background: rgba(242,238,213,0.8);
}
.aviaboard__tbody:hover {
  background: #fff;
}
.aviaboard__tbody img {
  float: left;
  border-radius: 5px;
}
.aviaboard__tbody h3 {
  color: #4a4240;
  font-weight: bolder;
  margin: 5px 0 0 110px;
}
.aviaboard__tbody p {
  margin: 3px 0 0 20px;
}
.aviaboard__tbody .aviaboard__info-block {
  -webkit-transition-property: max-height, margin;
  transition-property: max-height, margin;
  -webkit-transition-duration: 0.3s;
  transition-duration: 0.3s;
}
.aviaboard__tbody--opened {
  background: #fdfdfa !important;
}
.aviaboard__tbody--opened td {
  border-bottom: 1px solid #daccaf;
}
.aviaboard__tbody--opened .aviaboard__info-block {
  margin: 10px;
  max-height: 150px;
}
.aviaboard__tbody--departure .flight-type {
  background: url("images/departure.svg") no-repeat center;
  background-size: auto 25px;
}
.aviaboard__tbody--arrival .flight-type {
  background: url("images/arrival.svg") no-repeat center;
  background-size: auto 25px;
}
.aviaboard--hide-arrival .aviaboard__tbody--arrival {
  display: none;
}
.aviaboard--hide-departure .aviaboard__tbody--departure {
  display: none;
}
.aviaboard__info-block {
  font-size: 0.9em;
  word-break: normal;
  text-align: left;
  max-height: 0;
  overflow-y: hidden;
  margin-left: 10px;
}
.aviaboard__data {
  vertical-align: middle;
  display: inline-block;
  width: calc(100% - 100px);
}
.aviaboard__info,
.aviaboard__note {
  display: inline-block;
  width: 50%;
}
.aviaboard__info:only-child {
  width: 100% !important;
}
.aviaboard__time {
  font-size: 1.25em;
}
.aviaboard__date {
  font-size: 0.6em;
}
@media (max-width: 900px) {
  .aviaboard__date {
    display: none;
  }
}
.aviaboard__company {
  height: 60px;
  position: relative;
}
.aviaboard__company-logo {
  box-sizing: border-box;
  position: absolute;
  right: 0;
  padding: 5px;
  top: calc(50% - 25px);
}
.aviaboard__company-name {
  display: block;
  width: calc(100% - 50px);
}
@media (max-width: 900px) {
  .aviaboard__company-name {
    display: none;
  }
}
@media (max-width: 900px) {
  .aviaboard__airport {
    display: none;
  }
}
.aviaboard__airport:before {
  content: ' / ';
}
@media (max-width: 900px) {
  .aviaboard__plane span:first-child {
    display: none;
  }
}
@media (min-width: 900px) {
  .aviaboard__plane span:last-child {
    display: none;
  }
}
.aviaboard__check-departure,
.aviaboard__check-arrival {
  float: right;
  width: 40px;
  height: 40px;
  background: url("images/checked.svg") no-repeat center;
}
.aviaboard--hide-arrival .aviaboard__check-arrival {
  background: url("images/no-checked.svg") no-repeat center;
}
.aviaboard--hide-departure .aviaboard__check-departure {
  background: url("images/no-checked.svg") no-repeat center;
}
.aviaboard__button-departure {
  background: url("images/departure.svg") no-repeat center;
}
.aviaboard__button-arrival {
  background: url("images/arrival.svg") no-repeat center;
}
.aviaboard__button-departure,
.aviaboard__button-arrival {
  width: 50px;
  height: 40px;
  float: left;
  background-size: auto 15px;
}
@media (max-width: 900px) and (max-width: 800px) {
  .aviaboard td:nth-child(7) {
    word-break: break-all;
  }
}
@media (max-width: 800px) and (max-width: 800px) {
  .aviaboard td:nth-child(1) {
    word-break: break-all;
  }
}
@media (max-width: 800px) and (max-width: 800px) {
  .aviaboard td:nth-child(6) {
    word-break: break-all;
  }
}
@media (max-width: 700px) and (max-width: 800px) {
  .aviaboard td:nth-child(2) {
    word-break: break-all;
  }
}
@media (max-width: 700px) and (max-width: 800px) {
  .aviaboard td:nth-child(5) {
    word-break: break-all;
  }
}
/* normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}
body {
  margin: 0;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}
audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline;
}
audio:not([controls]) {
  display: none;
  height: 0;
}
[hidden],
template {
  display: none;
}
a {
  background-color: transparent;
}
a:active,
a:hover {
  outline: 0;
}
abbr[title] {
  border-bottom: 1px dotted;
}
b,
strong {
  font-weight: bold;
}
dfn {
  font-style: italic;
}
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}
mark {
  background: #ff0;
  color: #000;
}
small {
  font-size: 80%;
}
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sup {
  top: -0.5em;
}
sub {
  bottom: -0.25em;
}
img {
  border: 0;
}
svg:not(:root) {
  overflow: hidden;
}
figure {
  margin: 1em 40px;
}
hr {
  box-sizing: content-box;
  height: 0;
}
pre {
  overflow: auto;
}
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0;
}
button {
  overflow: visible;
}
button,
select {
  text-transform: none;
}
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer;
}
button[disabled],
html input[disabled] {
  cursor: default;
}
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}
input {
  line-height: normal;
}
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  padding: 0;
}
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}
input[type="search"] {
  -webkit-appearance: textfield;
  box-sizing: content-box;
}
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}
legend {
  border: 0;
  padding: 0;
}
textarea {
  overflow: auto;
}
optgroup {
  font-weight: bold;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
td,
th {
  padding: 0;
}
body {
  background: #fdfffb;
  font: 16px 'Helvetica Neue';
  font-weight: 300;
  text-align: center;
  margin-top: 50px;
}
b {
  font-weight: bolder;
}

/*# sourceMappingURL=data:application/json;base64, */